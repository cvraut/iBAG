% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/process.R
\name{data.validate.genes}
\alias{data.validate.genes}
\title{data.validate.genes}
\usage{
data.validate.genes(mrna,data)

For each dataset the patient vector is assumed to be the rownames.
}
\arguments{
\item{mrna}{:mrna data (follow convention of demo_mrna)}

\item{data}{:list of other dataframes (follow demo conventions)}

\item{sep}{("_"): the character seperator to use to differentiate mutliple columns of data per gene}

\item{DEBUG}{FALSE: flag to print debug statements}
}
\value{
boolean: whether this set of iBAG data is valid for the genes only
}
\description{
Validates mrna and upstream data to ensure genes match.
}
\details{
This function checks:
\itemize{
\item all genes are unique in mrna
\item all columns are unique across all datasets
\item given an upstream data platform:
\itemize{
\item for each gene in mrna there is at least 1 gene present
\item upstream platforms do not contain genes which are not present in mrna
}
}

A match across gene makes use of the {sep} argument. First a regex is constructed
from the mrna such as r"{GENE}({SEP}.+)?" then all gene data is found by matching this pattern.

Note: gene names are automatically converted to strings

Note: SEP should not be able to be found in any of the genes from mrna (auto-fail if sep="")

Note: if SEP == NULL then this method will perform perfect matches similar to data.validate.patient

Note: the order of the genes don't have to match, but it is important that the contents do.
}
